name: 'Promote'
on:
  workflow_dispatch

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: trial-cluster    # Add your cluster name here.
  GKE_ZONE: europe-west2  # Add your cluster zone here.
  DEPLOYMENT_NAME: python-app # Add your deployment name here.
  IMAGE: python-app

jobs:
  deployment:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: 'Checkout'
      uses: 'actions/checkout@v1'

    - id: 'auth'
      name: 'Authenticate to GCP'
      uses: 'google-github-actions/auth@v1'
      with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/1044325156148/locations/global/workloadIdentityPools/trial-gke/providers/github-oidc-srikaruna'
          service_account: 'service-trial1@hidden-phalanx-375513.iam.gserviceaccount.com'

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"

    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}"

    - name: 'Deploy'
      # Parameters are pulled directly from the GitHub deployment event so the
      # configuration for the job here is very minimal.
      uses: 'srikantharun/help-with-helm@master'
      with:
        release: 'production-myapp'
        namespace: 'default'
        token: '${{ github.token }}'
        secrets: '${{ toJSON(secrets) }}'
        version: '${{ github.sha }}'
        chart: 'app'
        remove_canary: true
        track: stable
        value_files: '["./config/production.yml","./config/_common.yml"]'
        helm: helm3
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
